# Generated by Django 3.2.9 on 2021-11-06 15:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('height', models.IntegerField(verbose_name='taille')),
                ('weight', models.IntegerField(verbose_name='poids')),
                ('ddn', models.DateTimeField(verbose_name='Date de naissance')),
                ('ddi', models.DateTimeField(verbose_name="Date de l'intervention")),
                ('intervention', models.CharField(default='', max_length=200, verbose_name='intervention')),
                ('chirurgie', models.CharField(choices=[('Chirurgie Cardiaque', 'Chirurgie Cardiaque'), ('Chirurgie Digestive', 'Chirurgie Digestive'), ('Chirurgie Gynecologique', 'Chirurgie Gynecologique'), ('Chirurgie Hepatique', 'Chirurgie Hepatique'), ('Chirurgie Orthopedique', 'Chirurgie Orthopedique'), ('Chirurgie Ophtalmologique', 'Chirurgie Ophtalmologique'), ('Chirurgie Plastique', 'Chirurgie Plastique'), ('Chirurgie Thoracique', 'Chirurgie Thoracique'), ('Chirurgie Urologique', 'Chirurgie Urologique'), ('Endoscopie', 'Endoscopie'), ('Neurochirurgie', 'Neurochirurgie'), ('Chirurgie ORL', 'Chirurgie ORL'), ('Radiologie Interventionnelle', 'Radiologie Interventionnelle'), ('Stomatologie', 'Stomatologie')], default='Chirurgie Cardiaque', max_length=40, verbose_name="Discipline de l'intervention")),
                ('pathologie', models.CharField(choices=[('Prévention primaire', 'Prévention primaire'), ('Prévention secondaire', 'Prévention secondaire'), ('Fibrilation Atriale', 'Fibrilation Atriale'), ('Valvulopathie', 'Valvulopathie'), ('Pontages Cardiaques', 'Pontages Cardiaques'), ('Chirurgie Vasculaire Arterielle', 'Chirurgie Vasculaire Arterielle'), ('ATCD EP', 'ATCD EP'), ('ATCD TVP', 'ATCD TVP'), ('ATCD AVC + AIT', 'ATCD AVC + AIT'), ('CMI', 'CMI'), ('Stents Cardiaques', 'Stents Cardiaques'), ('Greffe', 'Greffe'), ('Thrombose Porte', 'Thrombose Porte'), ('Thrombose Mesenterique', 'Thrombose Mesenterique')], default='Prévention primaire', max_length=40, verbose_name='Pathologie justifiant le traitement')),
                ('traitement1', models.CharField(choices=[('Aspirine, Asaflow, Cardioaspirine', 'Aspirine, Asaflow, Cardioaspirine'), ('Clopidogrel, PLAVIX', 'Clopidogrel, PLAVIX'), ('Prasugrel, EFFIENT', 'Prasugrel, EFFIENT'), ('Ticlopidine, TICLID', 'Ticlopidine, TICLID'), ('Dipyridamole', 'Dipyridamole'), ('Ticagrelor, BRILIQUE', 'Ticagrelor, BRILIQUE'), ('Acénocoumarol, SINTROM', 'Acénocoumarol, SINTROM'), ('Phenprocoumone, MARCOUMAR', 'Phenprocoumone, MARCOUMAR'), ('Warfarine, MAREVAN', 'Warfarine, MAREVAN'), ('Apixaban, ELIQUIS', 'Apixaban, ELIQUIS'), ('Dabigatran, PRADAXA', 'Dabigatran, PRADAXA'), ('Edoxaban, LIXIANA', 'Edoxaban, LIXIANA'), ('Rivaroxaban, XARELTO', 'Rivaroxaban, XARELTO'), ('Fondaparinux, ARIXTRA', 'Fondaparinux, ARIXTRA'), ('Enoxaparine, CLEXANE', 'Enoxaparine, CLEXANE'), ('Nadroparine, FRAXIPARINE, FRAXODI', 'Nadroparine, FRAXIPARINE, FRAXODI'), ('Tinzaparine, INNOHEP', 'Tinzaparine, INNOHEP'), ('HNF, Héparine Sodique', 'HNF, Héparine Sodique')], default='Aspirine, Asaflow, Cardioaspirine', max_length=40, verbose_name='Premier traitement')),
                ('traitement2', models.CharField(choices=[('Aucun', 'Aucun'), ('Aspirine, Asaflow, Cardioaspirine', 'Aspirine, Asaflow, Cardioaspirine'), ('Clopidogrel, PLAVIX', 'Clopidogrel, PLAVIX'), ('Prasugrel, EFFIENT', 'Prasugrel, EFFIENT'), ('Ticlopidine, TICLID', 'Ticlopidine, TICLID'), ('Dipyridamole', 'Dipyridamole'), ('Ticagrelor, BRILIQUE', 'Ticagrelor, BRILIQUE'), ('Acénocoumarol, SINTROM', 'Acénocoumarol, SINTROM'), ('Phenprocoumone, MARCOUMAR', 'Phenprocoumone, MARCOUMAR'), ('Warfarine, MAREVAN', 'Warfarine, MAREVAN'), ('Apixaban, ELIQUIS', 'Apixaban, ELIQUIS'), ('Dabigatran, PRADAXA', 'Dabigatran, PRADAXA'), ('Edoxaban, LIXIANA', 'Edoxaban, LIXIANA'), ('Rivaroxaban, XARELTO', 'Rivaroxaban, XARELTO'), ('Fondaparinux, ARIXTRA', 'Fondaparinux, ARIXTRA'), ('Enoxaparine, CLEXANE', 'Enoxaparine, CLEXANE'), ('Nadroparine, FRAXIPARINE, FRAXODI', 'Nadroparine, FRAXIPARINE, FRAXODI'), ('Tinzaparine, INNOHEP', 'Tinzaparine, INNOHEP'), ('HNF, Héparine Sodique', 'HNF, Héparine Sodique')], default='Aucun', max_length=40, verbose_name='Deuxième traitement')),
                ('resultats', jsonfield.fields.JSONField(default=dict)),
                ('schema_therap', models.CharField(choices=[('Date exacte', 'Date exacte'), ("Terminologie 'dernière prise à J-xx'", "Terminologie 'dernière prise à J-xx'"), ("Pas d'arrêt du traitement", "Pas d'arrêt du traitement")], default='Date exacte', max_length=40, verbose_name='Schéma thérapeutique donné au patient')),
                ('date_derniere_prise1', models.DateTimeField(blank=True, null=True, verbose_name='Date de dernière prise pratique (premier traitement)')),
                ('inobservance1', models.CharField(choices=[("Pas d'inobservance", "Pas d'inobservance"), ('Oubli', 'Oubli'), ('Incompréhension', 'Incompréhension'), ('Contre-ordre médical', 'Contre-ordre médical')], default="Pas d'inobservance", max_length=40, verbose_name='Inobservance (premier traitement)')),
                ('date_derniere_prise2', models.DateTimeField(blank=True, null=True, verbose_name='Date de dernière prise pratique (deuxième traitement)')),
                ('inobservance2', models.CharField(choices=[("Pas d'inobservance", "Pas d'inobservance"), ('Oubli', 'Oubli'), ('Incompréhension', 'Incompréhension'), ('Contre-ordre médical', 'Contre-ordre médical')], default="Pas d'inobservance", max_length=40, verbose_name='Inobservance (deuxième traitement)')),
                ('aptt', models.IntegerField(blank=True, null=True, verbose_name='APTT')),
                ('pt', models.IntegerField(blank=True, null=True, verbose_name='PT')),
                ('inr', models.IntegerField(blank=True, null=True, verbose_name='INR')),
                ('hemoglobine', models.IntegerField(blank=True, null=True, verbose_name='Hémoglobine')),
                ('plaquette', models.IntegerField(blank=True, null=True, verbose_name='Plaquettes')),
                ('dfg', models.IntegerField(blank=True, null=True, verbose_name='DFG')),
                ('vol_sang', models.IntegerField(blank=True, null=True, verbose_name='Volume de saignement peropératoire')),
                ('coag', models.CharField(choices=[('-0', '-0'), ('-1', '-1'), ('-2', '-2'), ('-3', '-3'), ('-4', '-4'), ('-5', '-5'), ('+5', '+5'), ('+4', '+4'), ('+3', '+3'), ('+2', '+2'), ('+1', '+1'), ('+0', '+0')], default='-5', max_length=2, verbose_name='Qualité de la coagulation selon le chirurgien')),
                ('incl_num', models.AutoField(primary_key=True, serialize=False)),
                ('date_published', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
